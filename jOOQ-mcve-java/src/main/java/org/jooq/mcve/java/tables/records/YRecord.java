/*
 * This file is generated by jOOQ.
 */
package org.jooq.mcve.java.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.mcve.java.tables.Y;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class YRecord extends UpdatableRecordImpl<YRecord> implements Record2<Long, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>C##CKNKSKTZFD.Y.ID</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>C##CKNKSKTZFD.Y.ID</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>C##CKNKSKTZFD.Y.VALUE</code>.
     */
    public void setValue(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>C##CKNKSKTZFD.Y.VALUE</code>.
     */
    public Long getValue() {
        return (Long) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<Long, Long> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<Long, Long> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Y.Y.ID;
    }

    @Override
    public Field<Long> field2() {
        return Y.Y.VALUE;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getValue();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getValue();
    }

    @Override
    public YRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public YRecord value2(Long value) {
        setValue(value);
        return this;
    }

    @Override
    public YRecord values(Long value1, Long value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached YRecord
     */
    public YRecord() {
        super(Y.Y);
    }

    /**
     * Create a detached, initialised YRecord
     */
    public YRecord(Long id, Long value) {
        super(Y.Y);

        setId(id);
        setValue(value);
    }
}
